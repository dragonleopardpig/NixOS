#+PROPERTY: header-args:python :session

* On-Click
#+BEGIN_SRC python
import turtle

turtle.home()
turtle.clear()

def setup():
    turtle.width(10)
    turtle.speed(10)
    turtle.color("red")

screen = turtle.Screen()
setup()

def point(i, j):
    setup()
    turtle.goto(i, j)
    turtle.write(str(i) + "," + str(j))

def clear_turtle(x, y):
    turtle.clear()
    turtle.reset()
    setup()

screen.onclick(clear_turtle, btn=2)
screen.onclick(point, btn=3)
screen.onclick(turtle.ondrag(turtle.goto), btn=1)
screen.listen()
screen.mainloop()
#+END_SRC
#+RESULTS:
: None

* Concentric Circles
#+BEGIN_SRC python
import turtle

turtle.clear()
turtle.reset()

turtle.shape("turtle")
turtle.width(5)
turtle.speed(10)
rainbow = [
    "red",
    "blue",
    "Tomato",
    "LawnGreen",
    "#1e90ff",
]

def concentricCircle(radius, step):
    counter = 0
    while counter < len(rainbow):
        turtle.color(rainbow[counter])
        # Draw Circle
        turtle.circle(radius + counter * step)
        # Reposition
        turtle.up()
        turtle.right(90)
        turtle.forward(step)
        turtle.left(90)
        turtle.down()
        # Reset counter
        counter = counter + 1

concentricCircle(radius=20, step=10)
#+END_SRC
#+RESULTS:
: None

* Concentric Square
#+BEGIN_SRC python
import turtle

turtle.clear()
turtle.reset()

turtle.shape("turtle")
turtle.width(5)
turtle.speed(10)
rainbow = [
    "red",
    "blue",
    "green",
    "magenta",
    "OliveDrab",
    "LawnGreen",
    "DodgerBlue",
    "SkyBlue",
    "SteelBlue",
    "Chocolate",
    "ForestGreen",
    "Aquamarine",
    "DarkSeaGreen",
    "PowderBlue",
    "Red2",
    "Red1",
    "Gainsboro",
    "Azure2",
]

def concentricSquare(length, step):
    counter = 0
    while counter < len(rainbow):
        turtle.color(rainbow[counter])
        # Draw square
        side = length + 2 * counter * step
        turtle.forward(side)
        turtle.left(90)
        turtle.forward(side)
        turtle.left(90)
        turtle.forward(side)
        turtle.left(90)
        turtle.forward(side)
        # Reposition
        turtle.up()
        turtle.forward(step)
        turtle.right(90)
        turtle.forward(step)
        turtle.left(180)
        turtle.down()
        # Reset counter
        counter = counter + 1

concentricSquare(length=10, step=10)
#+END_SRC
#+RESULTS:
: None

* Concentric Triangle
#+BEGIN_SRC python
import turtle
import math

turtle.clear()
turtle.reset()

turtle.shape("turtle")
turtle.width(3)
turtle.speed(10)
rainbow = [
    "red",
    "blue",
    "green",
    "magenta",
    "OliveDrab",
    "LawnGreen",
]

def concentricTriangle(length, step):
    counter = 0
    while counter < len(rainbow):
        turtle.color(rainbow[counter])
        # Draw triangle
        delta = step*math.tan(math.radians(30))
        side = length + 2*counter*(step + delta)
        turtle.forward(side)
        turtle.left(120)
        turtle.forward(side)
        turtle.left(120)
        turtle.forward(side)
        # Reposition
        turtle.up()
        turtle.left(30)
        turtle.forward(step)
        turtle.right(90)
        turtle.forward(step + delta)
        turtle.left(180)
        turtle.down()
        # Reset counter
        counter = counter + 1

concentricTriangle(length=100, step=20)
#+END_SRC
#+RESULTS:
: None

* Concentric Rectangle
#+BEGIN_SRC python
import turtle

turtle.clear()
turtle.reset()

turtle.shape("turtle") 
turtle.width(5)
turtle.speed(10)
rainbow = [
    "red",
    "blue",
    "green",
    "magenta",
    "OliveDrab",
    "LawnGreen",
    "DodgerBlue",
    "SkyBlue",
    "SteelBlue",
    "Chocolate",
    "ForestGreen",
    "Aquamarine",
    "DarkSeaGreen",
    "PowderBlue",
    "Red2",
    "Red1",
    "Gainsboro",
    "Azure2",
]

def concentricSquare(length1, length2, step):
    counter = 0
    while counter < len(rainbow):
        turtle.color(rainbow[counter])
        # Draw square
        side1 = length1 + 2 * counter * step
        side2 = length2 + 2 * counter * step
        turtle.forward(side1)
        turtle.left(90)
        turtle.forward(side2)
        turtle.left(90)
        turtle.forward(side1)
        turtle.left(90)
        turtle.forward(side2)
        # Reposition
        turtle.up()
        turtle.forward(step)
        turtle.right(90)
        turtle.forward(step)
        turtle.left(180)
        turtle.down()
        # Reset counter
        counter = counter + 1

concentricSquare(length1=50, length2=30, step=10)
#+END_SRC
#+RESULTS:
: None

* TURTLE RACE
#+BEGIN_SRC python
import random, turtle

turtle.clearscreen()

myscreen= turtle.Screen()

myscreen.bgcolor('DimGray')
myscreen.title('Turtle Race Game')
myscreen.tracer(1, 1)

def drawGrid(step, length):
    """draw grid"""
    turtle.pencolor('Gray50')
    turtle.speed(0)
    turtle.pensize(1)

    for i in range(0, length, step):
        turtle.penup()
        turtle.setpos(-length/2, length/2 - i)
        turtle.pendown()
        turtle.setpos(length/2, length/2 - i)
        turtle.penup()
        turtle.setpos(-length/2 + i, length/2)
        turtle.pendown()
        turtle.setpos(-length/2 + i, -length/2)

drawGrid(step=50, length=1000)

def drawRacingGrid():
    """draw racing grid"""
    turtle.pencolor('AntiqueWhite')
    turtle.speed(0)
    turtle.penup()
    turtle.goto(-200,300)
    turtle.pendown()

    for i in range(1,10):
        turtle.write(int(turtle.xcor()),font=('Arial',14))
        turtle.setheading(-90)
        turtle.forward(600)
        if i==9:turtle.write(" FINISH",font=('Arial',14))
        turtle.back(600)
        turtle.penup()
        turtle.setheading(0)
        turtle.forward(50)
        turtle.down()

drawRacingGrid()

def createTurtlePlayer(color, startx, starty):
    """create turtle player"""
    player=turtle.Turtle()
    player.color(color)
    player.shape("turtle")
    player.penup()
    player.goto(startx, starty)
    player.pendown()
    player.write(player.ycor(),font=('Arial',14))
    return player

p1=createTurtlePlayer('red',-250,250)
p2=createTurtlePlayer('light blue',-250,200)
p3=createTurtlePlayer('orange',-250,150)
p4=createTurtlePlayer('lime',-250,100)
p5=createTurtlePlayer('yellow',-250,50)
p6=createTurtlePlayer('white',-250,0)
p7=createTurtlePlayer('cyan',-250,-50)
p8=createTurtlePlayer('pink',-250,-100)
p9=createTurtlePlayer('violet',-250,-150)
p10=createTurtlePlayer('brown',-250,-200)
p11=createTurtlePlayer('DarkViolet',-250,-250)

finishLineX=200

while True:
    p1.forward(random.randint(5,10))
    if p1.pos()[0]>=finishLineX:
        p1.write('   I won the race!!',font=('Arial',20))
        break
    p2.forward(random.randint(5,10))
    if p2.pos()[0]>=finishLineX:
        p2.write('   I won the race!!',font=('Arial',20))
        break
    p3.forward(random.randint(5,10))
    if p3.pos()[0]>=finishLineX:
        p3.write('   I won the race!!',font=('Arial',20))
        break
    p4.forward(random.randint(5,10))
    if p4.pos()[0]>=finishLineX:
        p4.write('   I won the race!!',font=('Arial',20))
        break
    p5.forward(random.randint(5,10))
    if p5.pos()[0]>=finishLineX:
        p5.write('   I won the race!!',font=('Arial',20))
        break
    p6.forward(random.randint(5,10))
    if p6.pos()[0]>=finishLineX:
        p6.write('   I won the race!!',font=('Arial',20))
        break
    p7.forward(random.randint(5,10))
    if p7.pos()[0]>=finishLineX:
        p7.write('   I won the race!!',font=('Arial',20))
        break
    p8.forward(random.randint(5,10))
    if p8.pos()[0]>=finishLineX:
        p8.write('   I won the race!!',font=('Arial',20))
        break
    p9.forward(random.randint(5,10))
    if p9.pos()[0]>=finishLineX:
        p9.write('   I won the race!!',font=('Arial',20))
        break
    p10.forward(random.randint(5,10))
    if p10.pos()[0]>=finishLineX:
        p10.write('   I won the race!!',font=('Arial',20))
        break
    p11.forward(random.randint(5,10))
    if p11.pos()[0]>=finishLineX:
        p11.write('   I won the race!!',font=('Arial',20))
        break    
#+END_SRC
#+RESULTS:
: None
